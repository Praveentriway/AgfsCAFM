package com.daemon.emco_android.fragments.inspection;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.design.widget.CoordinatorLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.daemon.emco_android.MyApplication;
import com.daemon.emco_android.R;
import com.daemon.emco_android.utils.AppUtils;
import com.daemon.emco_android.utils.Font;
import com.daemon.emco_android.utils.Utils;

public class Fragment_InspectionModule extends Fragment implements View.OnClickListener {
  private static final String TAG = Fragment_InspectionModule.class.getSimpleName();

  private AppCompatActivity mActivity;
  private Context mContext;
  private Font font = MyApplication.getInstance().getFontInstance();

  private LinearLayout ll_im_landing, ll_im_services, ll_im_periodic;
  private Button btn_reactive_request_verification,
      btn_ppm_request_verification,
      btn_periodic_inspection;
  private TextView tv_toolbar_title;
  private CoordinatorLayout cl_main;
  private Toolbar mToolbar;

  @Override
  public void onCreate(Bundle savedInstanceState) {
    Log.d(TAG, "onCreate");

    super.onCreate(savedInstanceState);
    try {
      mActivity = (AppCompatActivity) getActivity();
      mContext = mActivity;
      setHasOptionsMenu(true);
      font = MyApplication.getInstance().getFontInstance();

    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }

  @Nullable
  @Override
  public View onCreateView(
      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    Log.d(TAG, "onCreateView");
    View rootView = null;
    try {
      rootView =
          (View) inflater.inflate(R.layout.fragment_inspection_landing_page, container, false);
      initUI(rootView);
      setProperties();
    } catch (Exception ex) {
      ex.printStackTrace();
    }
    return rootView;
  }

  private void initUI(View rootView) {
    Log.d(TAG, "initUI");
    try {
      cl_main = (CoordinatorLayout) mActivity.findViewById(R.id.cl_main);

      ll_im_landing = (LinearLayout) rootView.findViewById(R.id.ll_im_landing);
      ll_im_services = (LinearLayout) rootView.findViewById(R.id.ll_im_services);
      ll_im_periodic = (LinearLayout) rootView.findViewById(R.id.ll_im_periodic);

      btn_reactive_request_verification =
          (Button) rootView.findViewById(R.id.btn_reactive_request_verification);
      btn_ppm_request_verification =
          (Button) rootView.findViewById(R.id.btn_ppm_request_verification);
      btn_periodic_inspection = (Button) rootView.findViewById(R.id.btn_periodic_inspection);
      setupActionBar();
    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }

  public void setupActionBar() {
    mToolbar = (Toolbar) mActivity.findViewById(R.id.toolbar);
    tv_toolbar_title = (TextView) mToolbar.findViewById(R.id.tv_toolbar_title);
    tv_toolbar_title.setText(getString(R.string.title_inspection_module));
  //  mToolbar.setTitle(getResources().getString(R.string.title_inspection_module));
    mActivity.setSupportActionBar(mToolbar);
    mActivity.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    mToolbar.setNavigationOnClickListener(
        new View.OnClickListener() {
          @Override
          public void onClick(View view) {
            mActivity.onBackPressed();
          }
        });
  }

  private void setProperties() {
    Log.d(TAG, "setProperties");
    btn_reactive_request_verification.setTypeface(font.getHelveticaRegular());
    btn_ppm_request_verification.setTypeface(font.getHelveticaRegular());
    btn_periodic_inspection.setTypeface(font.getHelveticaRegular());

    ll_im_services.setVisibility(View.GONE);
    ll_im_periodic.setVisibility(View.GONE);
    ll_im_landing.setVisibility(View.VISIBLE);

    btn_reactive_request_verification.setOnClickListener(this);
    btn_ppm_request_verification.setOnClickListener(this);
    btn_periodic_inspection.setOnClickListener(this);

    AppUtils.closeInput(cl_main);
  }

  @Override
  public void onClick(View view) {
    switch (view.getId()) {
      case R.id.btn_reactive_request_verification:
        gotoIMServices(false, getString(R.string.title_reactive_request_verification));
        break;
      case R.id.btn_ppm_request_verification:
        gotoIMServices(true, getString(R.string.title_ppm_request_verification));
        break;
      case R.id.btn_periodic_inspection:
        loadFragment(new Fragment_IM_Periodic(), Utils.TAG_IM_PERIODIC);
        break;
    }
  }

  private void gotoIMServices(boolean ppe, String title) {
    Log.d(TAG, "gotoIMServices");
    Bundle data = new Bundle();
    Fragment_IM_Services complaintsList = new Fragment_IM_Services();
    data.putBoolean(AppUtils.ARGS_IM_PPE_Page, ppe);
    data.putString(AppUtils.ARGS_IM_SERVICES_Page_TITLE, title);
    complaintsList.setArguments(data);
    loadFragment(complaintsList, Utils.TAG_IM_SERVICES);
  }

  public void loadFragment(final Fragment fragment, final String tag) {
    Log.d(TAG, "loadFragment");
    // update the main content by replacing fragments
    FragmentTransaction fragmentTransaction =
        mActivity.getSupportFragmentManager().beginTransaction();
    fragmentTransaction.replace(R.id.frame_container, fragment, tag);
    fragmentTransaction.addToBackStack(tag);
    fragmentTransaction.commit();
  }

  @Override
  public void onPrepareOptionsMenu(Menu menu) {
    super.onPrepareOptionsMenu(menu);
    Log.d(TAG, "onPrepareOptionsMenu ");
    menu.findItem(R.id.action_logout).setVisible(false);
    menu.findItem(R.id.action_home).setVisible(true);
  }

  @Override
  public boolean onOptionsItemSelected(MenuItem item) {
    switch (item.getItemId()) {
      case R.id.action_home:
        Log.d(TAG, "onOptionsItemSelected : home");
        mActivity.onBackPressed();
        /* FragmentManager fm = getActivity().getSupportFragmentManager();
        for (int i = 0; i < fm.getBackStackEntryCount(); ++i) {
            fm.popBackStack();
        }*/
        break;
    }
    return super.onOptionsItemSelected(item);
  }
}
